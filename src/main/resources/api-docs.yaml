openapi: 3.0.1
info:
  title: Library Rest API
  description: Library Microservice
  version: "1.0"
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/v1/book/{id}:
    get:
      tags:
        - book-detail-controller
      operationId: getBookById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Book'
    put:
      tags:
        - book-detail-controller
      operationId: updateBook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Book'
    delete:
      tags:
        - book-detail-controller
      operationId: deleteBookById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Book'
  /api/v1/book:
    post:
      tags:
        - book-detail-controller
      operationId: addBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Book'
  /api/v1/books:
    get:
      tags:
        - book-detail-controller
      operationId: getAllBooks
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
  /api/v1/book/isbn/{isbn}:
    get:
      tags:
        - book-detail-controller
      operationId: getBookByIsbn
      parameters:
        - name: isbn
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Book'
  /api/v1/book/author/{author}:
    get:
      tags:
        - book-detail-controller
      operationId: getBookByAuthor
      parameters:
        - name: author
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Book'
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          format: int64
        isbn:
          type: string
        name:
          type: string
        author:
          type: string
        quantity:
          type: integer
          format: int32
        price:
          type: number
        date:
          type: string
